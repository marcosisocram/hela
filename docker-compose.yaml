version: '3.5'
services:
  api1: &app
    image: marcosisocram/rinha-2024-q1-kotlin:undertow-latest
    hostname: api1
    network_mode: "host"
    depends_on:
      - db
    expose:
      - "8180"
    command: ["-Dorg.slf4j.simpleLogger.defaultLogLevel=debug", "-Dlogger.level=debug"]
    environment:
      - PORT=8180
      - DB_URL=jdbc:h2:tcp://localhost:9092/~/rinha
      - DB_USER=sa
      - DB_PASSWORD=sa
      - DB_POOLSIZE=10
      - DB_CREATE=false
      - BACKLOG=2000
#    deploy:
#      resources:
#        limits:
#          cpus: '0.15'
#          memory: "70MB"

  api2: # API - Inst√¢ncia 02
    <<: *app
    expose:
      - "8280"
    environment:
      - PORT=8280
      - DB_URL=jdbc:h2:tcp://localhost:9092/~/rinha
      - DB_USER=sa
      - DB_PASSWORD=sa
      - DB_POOLSIZE=10
      - DB_CREATE=true
      - BACKLOG=2000
    hostname: api2

  db:
    image: marcosisocram/rinha-h2:latest
    #    image: gasparbarancelli/rinha-backend-database:latest
    #    hostname: db
    network_mode: "host"
    #    environment:
    #      - POSTGRES_PASSWORD=rinha-de-bK
    #      - POSTGRES_USER=user
    #      - POSTGRES_DB=postgres
    #      - PGPORT=5433
    #    volumes:
    #      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    #      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    #    healthcheck:
    #      test: [ "CMD-SHELL", "pg_isready" ]
    #      interval: 5s
    #      timeout: 5s
    #      retries: 5
#    deploy:
#      resources:
#        limits:
#          cpus: '0.7'
#          memory: '250MB'

  balance:
    container_name: marcosisocram-balancinha
    image: marcosisocram/balancinha:latest
    restart: on-failure
    depends_on:
      - api1
      - api2
    expose:
      - "9999"
    network_mode: "host"
    command: [ "/app/balance", "9999", "localhost:8180", "localhost:8280" ]
